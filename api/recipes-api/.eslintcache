[{"E:\\Dokumenty\\projekty\\api przepisy\\recipes-api\\src\\index.tsx":"1","E:\\Dokumenty\\projekty\\api przepisy\\recipes-api\\src\\reportWebVitals.ts":"2","E:\\Dokumenty\\projekty\\api przepisy\\recipes-api\\src\\App.tsx":"3","E:\\Dokumenty\\projekty\\api przepisy\\recipes-api\\src\\components\\Menu.js":"4","E:\\Dokumenty\\projekty\\api przepisy\\recipes-api\\src\\components\\Recipes.js":"5","E:\\Dokumenty\\projekty\\api przepisy\\recipes-api\\src\\components\\MainPage.js":"6","E:\\Dokumenty\\projekty\\api przepisy\\recipes-api\\src\\components\\AddNew.js":"7","E:\\Dokumenty\\projekty\\api przepisy\\recipes-api\\src\\components\\FoodCard.js":"8","E:\\Dokumenty\\projekty\\api przepisy typescript\\recipes-api\\src\\index.tsx":"9","E:\\Dokumenty\\projekty\\api przepisy typescript\\recipes-api\\src\\reportWebVitals.ts":"10","E:\\Dokumenty\\projekty\\api przepisy typescript\\recipes-api\\src\\App.tsx":"11","E:\\Dokumenty\\projekty\\api przepisy typescript\\recipes-api\\src\\components\\Menu.js":"12","E:\\Dokumenty\\projekty\\api przepisy typescript\\recipes-api\\src\\components\\MainPage.js":"13","E:\\Dokumenty\\projekty\\api przepisy typescript\\recipes-api\\src\\components\\Recipes.tsx":"14","E:\\Dokumenty\\projekty\\api przepisy typescript\\recipes-api\\src\\components\\FoodCard.tsx":"15","E:\\Dokumenty\\projekty\\api przepisy typescript\\recipes-api\\src\\components\\AddNew.js":"16","E:\\strony\\Github repos\\RecipApiRTN\\newRepiceApi\\api\\recipes-api\\src\\index.tsx":"17","E:\\strony\\Github repos\\RecipApiRTN\\newRepiceApi\\api\\recipes-api\\src\\reportWebVitals.ts":"18","E:\\strony\\Github repos\\RecipApiRTN\\newRepiceApi\\api\\recipes-api\\src\\App.tsx":"19","E:\\strony\\Github repos\\RecipApiRTN\\newRepiceApi\\api\\recipes-api\\src\\components\\Menu.js":"20","E:\\strony\\Github repos\\RecipApiRTN\\newRepiceApi\\api\\recipes-api\\src\\components\\AddNew.js":"21","E:\\strony\\Github repos\\RecipApiRTN\\newRepiceApi\\api\\recipes-api\\src\\components\\MainPage.js":"22","E:\\strony\\Github repos\\RecipApiRTN\\newRepiceApi\\api\\recipes-api\\src\\components\\Recipes.tsx":"23","E:\\strony\\Github repos\\RecipApiRTN\\newRepiceApi\\api\\recipes-api\\src\\components\\FoodCard.tsx":"24"},{"size":634,"mtime":1611328578588,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":1195,"mtime":1613137551544,"results":"28","hashOfConfig":"26"},{"size":1602,"mtime":1613129246930,"results":"29","hashOfConfig":"26"},{"size":1778,"mtime":1613132494426,"results":"30","hashOfConfig":"26"},{"size":440,"mtime":1613132600339,"results":"31","hashOfConfig":"26"},{"size":2433,"mtime":1613132695965,"results":"32","hashOfConfig":"26"},{"size":2001,"mtime":1613137928694,"results":"33","hashOfConfig":"26"},{"size":634,"mtime":1611328578588,"results":"34","hashOfConfig":"35"},{"size":425,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":1189,"mtime":1613138946716,"results":"37","hashOfConfig":"35"},{"size":1602,"mtime":1613129246930,"results":"38","hashOfConfig":"35"},{"size":440,"mtime":1613132600339,"results":"39","hashOfConfig":"35"},{"size":1955,"mtime":1613147398728,"results":"40","hashOfConfig":"35"},{"size":2176,"mtime":1613148146731,"results":"41","hashOfConfig":"35"},{"size":2437,"mtime":1613148297699,"results":"42","hashOfConfig":"35"},{"size":421,"mtime":1613762402000,"results":"43","hashOfConfig":"44"},{"size":425,"mtime":1613762402000,"results":"45","hashOfConfig":"44"},{"size":1857,"mtime":1613991764140,"results":"46","hashOfConfig":"44"},{"size":1556,"mtime":1613762402000,"results":"47","hashOfConfig":"44"},{"size":2385,"mtime":1613762402000,"results":"48","hashOfConfig":"44"},{"size":427,"mtime":1613762402000,"results":"49","hashOfConfig":"44"},{"size":1894,"mtime":1613762402000,"results":"50","hashOfConfig":"44"},{"size":2111,"mtime":1613762402000,"results":"51","hashOfConfig":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"8taruq",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1hmqnwk",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l5djzf",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},"E:\\Dokumenty\\projekty\\api przepisy\\recipes-api\\src\\index.tsx",[],["117","118"],"E:\\Dokumenty\\projekty\\api przepisy\\recipes-api\\src\\reportWebVitals.ts",[],"E:\\Dokumenty\\projekty\\api przepisy\\recipes-api\\src\\App.tsx",[],"E:\\Dokumenty\\projekty\\api przepisy\\recipes-api\\src\\components\\Menu.js",["119"],"import { render } from '@testing-library/react';\r\nimport React from 'react';\r\nimport './css/menu.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Menu = (props) => {\r\n    return (\r\n        <nav className=\"navbar p-5 d-flex justify-content-center\">\r\n            <div className=\"navbar-nav p-1\">\r\n\r\n                <div className=\"nav-item \">\r\n                    <Link to='/'>\r\n                        <div className=\"nav-link\">Główna</div>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"nav-item\">\r\n                    <Link to='/sweets'>\r\n                        <div className=\"nav-link\">Słodkości</div>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"nav-item\">\r\n                    <Link to='/main'>\r\n                        <div className=\"nav-link\">Dania główne</div>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"nav-item\">\r\n                    <Link to='/soups'>\r\n                        <div className=\"nav-link\">Zupy</div>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"nav-item\">\r\n                    <Link to='/cocktails'>\r\n                        <div className=\"nav-link\">Koktajle</div>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"nav-item\">\r\n                    <Link to='/add'>\r\n                        <div className=\"nav-link\">Dodaj własny</div>\r\n                    </Link>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nexport default Menu;",["120","121"],"E:\\Dokumenty\\projekty\\api przepisy\\recipes-api\\src\\components\\Recipes.js",["122","123","124"],"import { render } from '@testing-library/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport './css/foodRecipes.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport background from \"./css/pot.jpg\";\r\n\r\nconst Recipes = (props) => {\r\n\r\n    const [posts, setPosts] = useState(undefined);\r\n    const [ready, setReady] = useState(false);\r\n\r\n    const getBlogPost = () => {\r\n\r\n        axios.get(`/all/api${props.url}`)\r\n            .then((response) => {\r\n                const data = response.data;\r\n                setPosts(data);\r\n                setReady(true)\r\n            })\r\n            .catch(() => {\r\n                alert('Error received data! ');\r\n            });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBlogPost();\r\n\r\n    }, [props.url]);\r\n    return (\r\n        <Container className=\"col-sm-10 col-lg-8 col-xl-8\">\r\n            {ready ? (\r\n                posts.map((element, k) => {\r\n                    return (\r\n\r\n                        <div key={k} className=\"card\">\r\n                            <img className=\"card-img-top\" src={element.img ? element.img : background} alt=\"Card image\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{element.name}</h5>\r\n                                <Link to={`/${props.url}/${element.id}`} className=\"btn btn-primary\">\r\n                                    Zobacz przepis\r\n                                    </Link>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            ) : <i className=\"fas fa-4x fa-spinner fa-spin\"></i>}\r\n        </Container>\r\n    )\r\n};\r\nexport default Recipes; ","E:\\Dokumenty\\projekty\\api przepisy\\recipes-api\\src\\components\\MainPage.js",["125"],"import { createFactory } from \"react\";\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport React from 'react'\r\n\r\nexport default function MainPage() {\r\n    return (\r\n        <Container className=\"vh-100\">\r\n            <h1 className=\"mt-4 p-4\">Baza przepisów</h1>\r\n            <h2 className=\"p-3\">Witamy w bazie przepisów. Wybierz interesującą Cię kategorie dań lub dodaj własny przepis</h2>\r\n        </Container>\r\n    )\r\n}\r\n","E:\\Dokumenty\\projekty\\api przepisy\\recipes-api\\src\\components\\AddNew.js",["126"],"import React, { useEffect, useState } from 'react';\r\n\r\n\r\nexport default function AddNew() {\r\n    const [file, setFile] = useState(undefined);\r\n\r\n    function readFile() {\r\n        if (this.files && this.files[0]) {\r\n            var FR = new FileReader();\r\n            FR.addEventListener(\"load\", function (e) {\r\n                document.getElementById(\"img\").src = e.target.result;\r\n                setFile(e.target.result)\r\n            });\r\n            FR.readAsDataURL(this.files[0]);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        document.getElementById(\"inp\").addEventListener(\"change\", readFile);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"vh-100\">\r\n            <h1>Dodaj przepis</h1>\r\n            <form className=\"form-horizontal\" action=\"/add\" method=\"POST\" encType=\"multipart/form-data\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"title\">Nazwa dania:</label><br />\r\n                    <input className=\"w-50 p-2\" type=\"text\" name=\"title\" placeholder=\"nazwa\" required /><br />\r\n                    <label htmlFor=\"category\">Wybierz kategorie:</label><br />\r\n                    <select name=\"category\" id=\"cat\" required>\r\n                        <option value=\"sweets\">Słodkości</option>\r\n                        <option value=\"main\">Dania główne</option>\r\n                        <option value=\"soups\">Zupy</option>\r\n                        <option value=\"cocktails\">Koktajle</option>\r\n                    </select>\r\n                    <br />\r\n                    <label htmlFor=\"ingredients\">Składniki: (oddzielane średnikami)</label><br />\r\n                    <input className=\"w-50 p-2\" type=\"text\" name=\"ingredients\" placeholder=\"piepsz;sól\" required /><br />\r\n                    <label htmlFor=\"prepatarion\">Opis przygotowania:</label><br />\r\n                    <textarea className=\"w-50 p-2\" name=\"preparation\" placeholder=\"Zagotuj wodę..\" required /><br />\r\n                    <label htmlFor=\"uploadedFile\">Zdjęcie nie jest wymagane</label><br />\r\n                    <input type=\"file\" id=\"inp\" name=\"uploadedFile\" />\r\n                    <br />\r\n                    <img id=\"img\" height=\"150\"></img>\r\n                    <br />\r\n                    <input type=\"hidden\" name=\"fileValue\" value={file} />\r\n                    <input type=\"submit\" value=\"Wyślij przepis\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","E:\\Dokumenty\\projekty\\api przepisy\\recipes-api\\src\\components\\FoodCard.js",["127","128","129"],"E:\\Dokumenty\\projekty\\api przepisy typescript\\recipes-api\\src\\index.tsx",[],["130","131"],"E:\\Dokumenty\\projekty\\api przepisy typescript\\recipes-api\\src\\reportWebVitals.ts",[],"E:\\Dokumenty\\projekty\\api przepisy typescript\\recipes-api\\src\\App.tsx",[],"E:\\Dokumenty\\projekty\\api przepisy typescript\\recipes-api\\src\\components\\Menu.js",["132"],["133","134"],"E:\\Dokumenty\\projekty\\api przepisy typescript\\recipes-api\\src\\components\\MainPage.js",["135"],"E:\\Dokumenty\\projekty\\api przepisy typescript\\recipes-api\\src\\components\\Recipes.tsx",["136","137","138","139"],"import { render } from '@testing-library/react';\r\nimport React, { useState, useEffect,FunctionComponent } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport './css/foodRecipes.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport background from \"./css/pot.jpg\";\r\n\r\ninterface Iprops {\r\n    url: string;\r\n}\r\ninterface Idata{\r\n    img:string;\r\n    name:string;\r\n    id:number;\r\n}\r\n\r\nconst Recipes=(props:Iprops)=> {\r\n\r\n    const [posts, setPosts] = useState<Array<Idata>>([]);\r\n    const [ready, setReady] = useState<boolean>(false);\r\n\r\n    const getBlogPost = () => {\r\n\r\n        axios.get(`/all/api${props.url}`)\r\n            .then((response) => {\r\n                const data = response.data;\r\n                setPosts(data);\r\n                setReady(true)\r\n            })\r\n            .catch(() => {\r\n                alert('Error received data! ');\r\n            });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBlogPost();\r\n\r\n    }, [props.url]);\r\n    return (\r\n        <Container className=\"col-sm-10 col-lg-8 col-xl-8 min-vh-100\">\r\n            {ready ? (\r\n                posts?(posts.map((element, k) => {\r\n                    return (\r\n\r\n                        <div key={k} className=\"card\">\r\n                            <img className=\"card-img-top\" src={element.img ? element.img : background} alt=\"Card image\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{element.name}</h5>\r\n                                <Link to={`/${props.url}/${element.id}`} className=\"btn btn-primary\">\r\n                                    Zobacz przepis\r\n                                    </Link>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })):null\r\n            ) : <i className=\"fas fa-4x fa-spinner fa-spin\"></i>}\r\n        </Container>\r\n    )\r\n};\r\nexport default Recipes; ","E:\\Dokumenty\\projekty\\api przepisy typescript\\recipes-api\\src\\components\\FoodCard.tsx",["140","141","142"],"import { render } from '@testing-library/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport './css/foodRecipes.css';\r\nimport axios from 'axios';\r\n\r\ninterface Idata{\r\n    img:string;\r\n    name:string;\r\n    ingredients:Array<string>;\r\n    preparation:string;\r\n    id:number;\r\n}\r\n\r\nconst FoodCard = () => {\r\n    const [data, setData] = useState<Array<Idata>>([]);\r\n    const [ready, setReady] = useState<boolean>(false);\r\n\r\n    const url = window.location.pathname;\r\n    const url2 = url.substring(1);\r\n    const indexSlash = url2.indexOf(\"/\");\r\n    const id = url2.substring(indexSlash + 1);\r\n    const getBlogPost = () => {\r\n        axios.get(`/search/product${id}`)\r\n            .then((response) => {\r\n                const data = response.data;\r\n                setData(data);\r\n                setReady(true)\r\n            })\r\n            .catch(() => {\r\n                alert('Error received data! ');\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBlogPost()\r\n    }, []);\r\n    return (\r\n\r\n        <Container className=\"min-vh-100\">\r\n            {ready ? (\r\n                data.map((element, k) => {\r\n                    return (\r\n                        <div key={k} className=\"card\">\r\n                            <h1 className=\"card-title\">{element.name}</h1>\r\n                            <div className=\"card-body\">\r\n                                <h3>Składniki: </h3>\r\n                                {element.ingredients.map((one, k) => {\r\n                                    return (\r\n                                        <p key={k}>{one}</p>\r\n                                    )\r\n                                })}\r\n                                <h3>Sposób przygotowania:</h3><p>{element.preparation}</p>\r\n                                {element.img ? <img className=\"card-img-top\" src={element.img} alt=\"Card image\" /> : null}\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                })\r\n            ) : <i className=\"fas fa-4x fa-spinner fa-spin\"></i>}\r\n        </Container>\r\n\r\n\r\n    )\r\n};\r\nexport default FoodCard; ",["143","144"],"E:\\Dokumenty\\projekty\\api przepisy typescript\\recipes-api\\src\\components\\AddNew.js",["145"],"import React, { useEffect, useState } from 'react';\r\n\r\nexport default function AddNew() {\r\n    const [file, setFile] = useState(undefined);\r\n\r\n    function readFile() {\r\n        if (this.files && this.files[0]) {\r\n            var FR = new FileReader();\r\n            FR.addEventListener(\"load\", function (e) {\r\n                document.getElementById(\"img\").src = e.target.result;\r\n                setFile(e.target.result)\r\n            });\r\n            FR.readAsDataURL(this.files[0]);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        document.getElementById(\"inp\").addEventListener(\"change\", readFile);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"min-vh-100\">\r\n            <h1>Dodaj przepis</h1>\r\n            <form className=\"form-horizontal\" action=\"/add\" method=\"POST\" encType=\"multipart/form-data\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"title\">Nazwa dania:</label><br />\r\n                    <input className=\"w-50 p-2\" type=\"text\" name=\"title\" placeholder=\"nazwa\" required /><br />\r\n                    <label htmlFor=\"category\">Wybierz kategorie:</label><br />\r\n                    <select name=\"category\" id=\"cat\" required>\r\n                        <option value=\"sweets\">Słodkości</option>\r\n                        <option value=\"main\">Dania główne</option>\r\n                        <option value=\"soups\">Zupy</option>\r\n                        <option value=\"cocktails\">Koktajle</option>\r\n                    </select>\r\n                    <br />\r\n                    <label htmlFor=\"ingredients\">Składniki: (oddzielane średnikami)</label><br />\r\n                    <input className=\"w-50 p-2\" type=\"text\" name=\"ingredients\" placeholder=\"piepsz;sól\" required /><br />\r\n                    <label htmlFor=\"prepatarion\">Opis przygotowania:</label><br />\r\n                    <textarea className=\"w-50 p-2\" name=\"preparation\" placeholder=\"Zagotuj wodę..\" required /><br />\r\n                    <label htmlFor=\"uploadedFile\">Zdjęcie nie jest wymagane</label><br />\r\n                    <input type=\"file\" id=\"inp\" name=\"uploadedFile\" />\r\n                    <br />\r\n                    <img id=\"img\" height=\"150\"></img>\r\n                    <br />\r\n                    <input type=\"hidden\" name=\"fileValue\" value={file} />\r\n                    <input type=\"submit\" value=\"Wyślij przepis\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","E:\\strony\\Github repos\\RecipApiRTN\\newRepiceApi\\api\\recipes-api\\src\\index.tsx",[],"E:\\strony\\Github repos\\RecipApiRTN\\newRepiceApi\\api\\recipes-api\\src\\reportWebVitals.ts",[],"E:\\strony\\Github repos\\RecipApiRTN\\newRepiceApi\\api\\recipes-api\\src\\App.tsx",["146","147"],"E:\\strony\\Github repos\\RecipApiRTN\\newRepiceApi\\api\\recipes-api\\src\\components\\Menu.js",["148"],"import { render } from '@testing-library/react';\nimport React from 'react';\nimport './css/menu.css';\nimport { Link } from 'react-router-dom';\n\nconst Menu = (props) => {\n    return (\n        <nav className=\"navbar p-5 d-flex justify-content-center\">\n            <div className=\"navbar-nav p-1\">\n\n                <div className=\"nav-item \">\n                    <Link to='/'>\n                        <div className=\"nav-link\">Główna</div>\n                    </Link>\n                </div>\n                <div className=\"nav-item\">\n                    <Link to='/sweets'>\n                        <div className=\"nav-link\">Słodkości</div>\n                    </Link>\n                </div>\n                <div className=\"nav-item\">\n                    <Link to='/main'>\n                        <div className=\"nav-link\">Dania główne</div>\n                    </Link>\n                </div>\n                <div className=\"nav-item\">\n                    <Link to='/soups'>\n                        <div className=\"nav-link\">Zupy</div>\n                    </Link>\n                </div>\n                <div className=\"nav-item\">\n                    <Link to='/cocktails'>\n                        <div className=\"nav-link\">Koktajle</div>\n                    </Link>\n                </div>\n                <div className=\"nav-item\">\n                    <Link to='/add'>\n                        <div className=\"nav-link\">Dodaj własny</div>\n                    </Link>\n                </div>\n\n\n            </div>\n        </nav>\n    );\n}\nexport default Menu;","E:\\strony\\Github repos\\RecipApiRTN\\newRepiceApi\\api\\recipes-api\\src\\components\\AddNew.js",["149"],"import React, { useEffect, useState } from 'react';\n\nexport default function AddNew() {\n    const [file, setFile] = useState(undefined);\n\n    function readFile() {\n        if (this.files && this.files[0]) {\n            var FR = new FileReader();\n            FR.addEventListener(\"load\", function (e) {\n                document.getElementById(\"img\").src = e.target.result;\n                setFile(e.target.result)\n            });\n            FR.readAsDataURL(this.files[0]);\n        }\n    }\n    useEffect(() => {\n        document.getElementById(\"inp\").addEventListener(\"change\", readFile);\n    }, []);\n\n    return (\n        <div className=\"min-vh-100\">\n            <h1>Dodaj przepis</h1>\n            <form className=\"form-horizontal\" action=\"/add\" method=\"POST\" encType=\"multipart/form-data\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Nazwa dania:</label><br />\n                    <input className=\"w-50 p-2\" type=\"text\" name=\"title\" placeholder=\"nazwa\" required /><br />\n                    <label htmlFor=\"category\">Wybierz kategorie:</label><br />\n                    <select name=\"category\" id=\"cat\" required>\n                        <option value=\"sweets\">Słodkości</option>\n                        <option value=\"main\">Dania główne</option>\n                        <option value=\"soups\">Zupy</option>\n                        <option value=\"cocktails\">Koktajle</option>\n                    </select>\n                    <br />\n                    <label htmlFor=\"ingredients\">Składniki: (oddzielane średnikami)</label><br />\n                    <input className=\"w-50 p-2\" type=\"text\" name=\"ingredients\" placeholder=\"piepsz;sól\" required /><br />\n                    <label htmlFor=\"prepatarion\">Opis przygotowania:</label><br />\n                    <textarea className=\"w-50 p-2\" name=\"preparation\" placeholder=\"Zagotuj wodę..\" required /><br />\n                    <label htmlFor=\"uploadedFile\">Zdjęcie nie jest wymagane</label><br />\n                    <input type=\"file\" id=\"inp\" name=\"uploadedFile\" />\n                    <br />\n                    <img id=\"img\" height=\"150\"></img>\n                    <br />\n                    <input type=\"hidden\" name=\"fileValue\" value={file} />\n                    <input type=\"submit\" value=\"Wyślij przepis\" />\n                </div>\n            </form>\n        </div>\n    )\n}\n\n\n","E:\\strony\\Github repos\\RecipApiRTN\\newRepiceApi\\api\\recipes-api\\src\\components\\MainPage.js",["150"],"import { createFactory } from \"react\";\nimport Container from 'react-bootstrap/Container';\n\nimport React from 'react'\n\nexport default function MainPage() {\n    return (\n        <Container className=\"vh-100\">\n            <h1 className=\"mt-4 p-4\">Baza przepisów</h1>\n            <h2 className=\"p-3\">Witamy w bazie przepisów. Wybierz interesującą Cię kategorie dań lub dodaj własny przepis</h2>\n        </Container>\n    )\n}\n","E:\\strony\\Github repos\\RecipApiRTN\\newRepiceApi\\api\\recipes-api\\src\\components\\Recipes.tsx",["151","152","153","154"],"import { render } from '@testing-library/react';\nimport React, { useState, useEffect,FunctionComponent } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport './css/foodRecipes.css';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport background from \"./css/pot.jpg\";\n\ninterface Iprops {\n    url: string;\n}\ninterface Idata{\n    img:string;\n    name:string;\n    id:number;\n}\n\nconst Recipes=(props:Iprops)=> {\n\n    const [posts, setPosts] = useState<Array<Idata>>([]);\n    const [ready, setReady] = useState<boolean>(false);\n\n    const getBlogPost = () => {\n\n        axios.get(`/all/api${props.url}`)\n            .then((response) => {\n                const data = response.data;\n                setPosts(data);\n                setReady(true)\n            })\n            .catch(() => {\n                alert(`Error received data! `);\n            });\n\n    }\n\n    useEffect(() => {\n        getBlogPost();\n\n    }, [props.url]);\n    return (\n        <Container className=\"col-sm-10 col-lg-8 col-xl-8 min-vh-100\">\n            {ready ? (\n                posts?(posts.map((element, k) => {\n                    return (\n\n                        <div key={k} className=\"card\">\n                            <img className=\"card-img-top\" src={element.img ? element.img : background} alt=\"Card image\" />\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">{element.name}</h5>\n                                <Link to={`/${props.url}/${element.id}`} className=\"btn btn-primary\">\n                                    Zobacz przepis\n                                    </Link>\n                            </div>\n                        </div>\n                    )\n                })):null\n            ) : <i className=\"fas fa-4x fa-spinner fa-spin\"></i>}\n        </Container>\n    )\n};\nexport default Recipes; ","E:\\strony\\Github repos\\RecipApiRTN\\newRepiceApi\\api\\recipes-api\\src\\components\\FoodCard.tsx",["155","156","157"],"import { render } from '@testing-library/react';\nimport React, { useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport './css/foodRecipes.css';\nimport axios from 'axios';\n\ninterface Idata{\n    img:string;\n    name:string;\n    ingredients:Array<string>;\n    preparation:string;\n    id:number;\n}\n\nconst FoodCard = () => {\n    const [data, setData] = useState<Array<Idata>>([]);\n    const [ready, setReady] = useState<boolean>(false);\n\n    const url = window.location.pathname;\n    const url2 = url.substring(1);\n    const indexSlash = url2.indexOf(\"/\");\n    const id = url2.substring(indexSlash + 1);\n    const getBlogPost = () => {\n        axios.get(`/search/product${id}`)\n            .then((response) => {\n                const data = response.data;\n                setData(data);\n                setReady(true)\n            })\n            .catch(() => {\n                alert('Error received data! ');\n            });\n    }\n\n    useEffect(() => {\n        getBlogPost()\n    }, []);\n    return (\n\n        <Container className=\"min-vh-100\">\n            {ready ? (\n                data.map((element, k) => {\n                    return (\n                        <div key={k} className=\"card\">\n                            <h1 className=\"card-title\">{element.name}</h1>\n                            <div className=\"card-body\">\n                                <h3>Składniki: </h3>\n                                {element.ingredients.map((one, k) => {\n                                    return (\n                                        <p key={k}>{one}</p>\n                                    )\n                                })}\n                                <h3>Sposób przygotowania:</h3><p>{element.preparation}</p>\n                                {element.img ? <img className=\"card-img-top\" src={element.img} alt=\"Card image\" /> : null}\n                            </div>\n                        </div>\n\n                    )\n                })\n            ) : <i className=\"fas fa-4x fa-spinner fa-spin\"></i>}\n        </Container>\n\n\n    )\n};\nexport default FoodCard; ",{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":16},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":16},{"ruleId":"166","severity":1,"message":"167","line":31,"column":8,"nodeType":"168","endLine":31,"endColumn":19,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":39,"column":29,"nodeType":"172","endLine":39,"endColumn":123},{"ruleId":"162","severity":1,"message":"173","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":23},{"ruleId":"174","severity":1,"message":"175","line":43,"column":21,"nodeType":"172","endLine":43,"endColumn":48},{"ruleId":"162","severity":1,"message":"163","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":16},{"ruleId":"166","severity":1,"message":"167","line":30,"column":8,"nodeType":"168","endLine":30,"endColumn":10,"suggestions":"176"},{"ruleId":"170","severity":1,"message":"171","line":47,"column":48,"nodeType":"172","endLine":47,"endColumn":115},{"ruleId":"158","replacedBy":"177"},{"ruleId":"160","replacedBy":"178"},{"ruleId":"162","severity":1,"message":"163","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":16},{"ruleId":"158","replacedBy":"177"},{"ruleId":"160","replacedBy":"178"},{"ruleId":"162","severity":1,"message":"173","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":23},{"ruleId":"179","severity":1,"message":"163","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":2,"column":37,"nodeType":"164","messageId":"165","endLine":2,"endColumn":54},{"ruleId":"166","severity":1,"message":"167","line":40,"column":8,"nodeType":"168","endLine":40,"endColumn":19,"suggestions":"181"},{"ruleId":"170","severity":1,"message":"171","line":48,"column":29,"nodeType":"172","endLine":48,"endColumn":123},{"ruleId":"179","severity":1,"message":"163","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":16},{"ruleId":"166","severity":1,"message":"167","line":37,"column":8,"nodeType":"168","endLine":37,"endColumn":10,"suggestions":"182"},{"ruleId":"170","severity":1,"message":"171","line":54,"column":48,"nodeType":"172","endLine":54,"endColumn":115},{"ruleId":"158","replacedBy":"183"},{"ruleId":"160","replacedBy":"184"},{"ruleId":"174","severity":1,"message":"175","line":42,"column":21,"nodeType":"172","endLine":42,"endColumn":48},{"ruleId":"179","severity":1,"message":"185","line":10,"column":8,"nodeType":"164","messageId":"165","endLine":10,"endColumn":13},{"ruleId":"179","severity":1,"message":"186","line":11,"column":8,"nodeType":"164","messageId":"165","endLine":11,"endColumn":18},{"ruleId":"162","severity":1,"message":"163","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":42,"column":21,"nodeType":"172","endLine":42,"endColumn":48},{"ruleId":"162","severity":1,"message":"173","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":23},{"ruleId":"179","severity":1,"message":"163","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":2,"column":37,"nodeType":"164","messageId":"165","endLine":2,"endColumn":54},{"ruleId":"166","severity":1,"message":"167","line":40,"column":8,"nodeType":"168","endLine":40,"endColumn":19,"suggestions":"187"},{"ruleId":"170","severity":1,"message":"171","line":48,"column":29,"nodeType":"172","endLine":48,"endColumn":123},{"ruleId":"179","severity":1,"message":"163","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":16},{"ruleId":"166","severity":1,"message":"167","line":37,"column":8,"nodeType":"168","endLine":37,"endColumn":10,"suggestions":"188"},{"ruleId":"170","severity":1,"message":"171","line":54,"column":48,"nodeType":"172","endLine":54,"endColumn":115},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBlogPost'. Either include it or remove the dependency array.","ArrayExpression",["191"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'createFactory' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["192"],["189"],["190"],"@typescript-eslint/no-unused-vars","'FunctionComponent' is defined but never used.",["193"],["194"],["189"],["190"],"'axios' is defined but never used.","'background' is defined but never used.",["195"],["196"],"no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"197","fix":"201"},{"desc":"199","fix":"202"},{"desc":"197","fix":"203"},{"desc":"199","fix":"204"},"Update the dependencies array to be: [getBlogPost, props.url]",{"range":"205","text":"206"},"Update the dependencies array to be: [getBlogPost]",{"range":"207","text":"208"},{"range":"209","text":"206"},{"range":"210","text":"208"},{"range":"211","text":"206"},{"range":"212","text":"208"},[835,846],"[getBlogPost, props.url]",[901,903],"[getBlogPost]",[988,999],[1053,1055],[949,960],[1017,1019]]